Include "MAPBASIC.DEF"
Include "DialogFillUpks.def"

'Не редактируйте нижеследующие закомментированные строки!
'//{$DLG_HANDLERS DialogFillUpks.mb}

'//{$BEGIN GLOBALS FOR CONTROL DialogFillUpksTableUpks}
Global DialogFillUpksTableUpks_sTableName As String
Global DialogFillUpksTableUpks_sTablePath As String
Global DialogFillUpksTableUpks_saLayers() As String
Global DialogFillUpksTableUpks_WinID As Integer
Global DialogFillUpksTableUpks_CurrTable As String
Global DialogFillUpksTableUpks_LayerCount As Integer
Global DialogFillUpksTableUpks_I As Integer
'//{$END GLOBALS FOR CONTROL DialogFillUpksTableUpks}

'//{$BEGIN GLOBALS FOR CONTROL DialogFillUpksmTableZU}
Global DialogFillUpksmTableZU_sTableName As String
Global DialogFillUpksmTableZU_sTablePath As String
Global DialogFillUpksmTableZU_saLayers() As String
Global DialogFillUpksmTableZU_WinID As Integer
Global DialogFillUpksmTableZU_CurrTable As String
Global DialogFillUpksmTableZU_LayerCount As Integer
Global DialogFillUpksmTableZU_I As Integer
'//{$END GLOBALS FOR CONTROL DialogFillUpksmTableZU}


Declare Function IniReadString Lib "alDLIB05.DLL" Alias "IniReadString" (ByVal File as String, ByVal Section as String, ByVal Key as String, ByVal DefV as String) As String
Declare Function IniWriteString Lib "alDLIB05.DLL" Alias "IniWriteString" (ByVal File as String, ByVal Section as String, ByVal Key as String, ByVal Value as String) As Integer

declare Sub SelectTableUpks(byval TableName as string, TableColumns(), TypeColumns(), FullColumnsInfo() As String)
declare function getColNumberUpks(byval table as string, byval colName as string) as integer

Declare Sub LoadIniUpks
Declare Sub SaveIniUpks
Declare Sub GetDialogElementsUpks
Declare Sub SetDialogElementsUpks

' Global Debug As logical
Define Debug true

Type ListInfo
   Name as string
   Num as integer
End Type

Dim TableColumns_1(0), TypeColumns_1(0), FullColumnsInfo_1(0) As String
Dim TableColumns_2(0), TypeColumns_2(0), FullColumnsInfo_2(0) As String

dim table_zu as string
dim field_zu_kad_num as ListInfo
dim field_zu_kod_upks as ListInfo
dim filed_zu_deviation as ListInfo

dim table_upks as string
dim field_upks_kad_num as ListInfo


Sub DialogFillUpks_OnShow
   if Debug then Print "------------------------------------------------" end if
'//{$BEGIN INIT CODE FOR CONTROL DialogFillUpksTableUpks}
   ReDim DialogFillUpksTableUpks_saLayers(0)
   DialogFillUpksTableUpks_WinID = FrontWindow()
   If DialogFillUpksTableUpks_WinID Then
      DialogFillUpksTableUpks_LayerCount = NumTables()
   Else
      DialogFillUpksTableUpks_LayerCount = 0
      Alter Control DialogFillUpksTableUpks Title "-Нет открытых таблиц-" Disable
   End If
   If (NumTables() > 0)AND( DialogFillUpksTableUpks_LayerCount <> 0) Then
      ReDim DialogFillUpksTableUpks_saLayers(DialogFillUpksTableUpks_LayerCount)
      For DialogFillUpksTableUpks_i = 1 to DialogFillUpksTableUpks_LayerCount
         DialogFillUpksTableUpks_saLayers(DialogFillUpksTableUpks_i) = TableInfo(DialogFillUpksTableUpks_i, TAB_INFO_NAME)
      Next
      Alter Control DialogFillUpksTableUpks Title From Variable DialogFillUpksTableUpks_saLayers
   End If
'//{$END INIT CODE FOR CONTROL DialogFillUpksTableUpks}

'//{$BEGIN INIT CODE FOR CONTROL DialogFillUpksmTableZU}
   ReDim DialogFillUpksmTableZU_saLayers(0)
   DialogFillUpksmTableZU_WinID = FrontWindow()
   If DialogFillUpksmTableZU_WinID Then
      DialogFillUpksmTableZU_LayerCount = NumTables()
   Else
      DialogFillUpksmTableZU_LayerCount = 0
      Alter Control DialogFillUpksmTableZU Title "-Нет открытых таблиц-" Disable
   End If
   If (NumTables() > 0)AND( DialogFillUpksmTableZU_LayerCount <> 0) Then
      ReDim DialogFillUpksmTableZU_saLayers(DialogFillUpksmTableZU_LayerCount)
      For DialogFillUpksmTableZU_i = 1 to DialogFillUpksmTableZU_LayerCount
         DialogFillUpksmTableZU_saLayers(DialogFillUpksmTableZU_i) = TableInfo(DialogFillUpksmTableZU_i, TAB_INFO_NAME)
      Next
      Alter Control DialogFillUpksmTableZU Title From Variable DialogFillUpksmTableZU_saLayers
   End If
'//{$END INIT CODE FOR CONTROL DialogFillUpksmTableZU}

   Call SetDialogElementsUpks
   Call DialogFillUpksmTableZU_OnClick
   Call DialogFillUpksTableUpks_OnClick

End Sub


Sub DialogFillUpks_OnOKModalResult

End Sub


Sub DialogFillUpks_OnCancelModalResult

End Sub


Sub DialogFillUpksbtnOK_OnClick
   Call GetDialogElementsUpks
End Sub


Sub DialogFillUpksbtnCancel_OnClick

End Sub


Sub DialogFillUpksmTableZU_OnClick
   If UBound(DialogFillUpksmTableZU_saLayers) > 0 Then
      DialogFillUpksmTableZU_sTableName = DialogFillUpksmTableZU_saLayers(ReadControlValue(DialogFillUpksmTableZU))
      'print "DialogFillUpksmTableZU_sTableName ="+DialogFillUpksmTableZU_sTableName
      Call SelectTableUpks(DialogFillUpksmTableZU_sTableName, TableColumns_1, TypeColumns_1, FullColumnsInfo_1)
      Alter Control DialogFillUpksPmZuNumKvartal Title From Variable FullColumnsInfo_1
      Alter Control DialogFillUpksPmZuNumKvartal Enable
      Alter Control DialogFillUpksPmZuKodUpks Title From Variable FullColumnsInfo_1
      Alter Control DialogFillUpksPmZuKodUpks Enable
      Alter Control DialogFillUpksPmZuDeviation Title From Variable FullColumnsInfo_1
      Alter Control DialogFillUpksPmZuDeviation Enable
   End If
End Sub


Sub DialogFillUpksPmZuKodUpks_OnClick

End Sub


Sub DialogFillUpksPmZuNumKvartal_OnClick

End Sub


Sub DialogFillUpksTableUpks_OnClick
   If UBound(DialogFillUpksTableUpks_saLayers) > 0 Then
      DialogFillUpksTableUpks_sTableName = DialogFillUpksTableUpks_saLayers(ReadControlValue(DialogFillUpksTableUpks))
      'print "DialogFillUpksTableUpks_sTableName ="+DialogFillUpksTableUpks_sTableName
      Call SelectTableUpks(DialogFillUpksTableUpks_sTableName, TableColumns_2, TypeColumns_2, FullColumnsInfo_2)
      Alter Control DialogFillUpksPmUpksNum Title From Variable FullColumnsInfo_2
      Alter Control DialogFillUpksPmUpksNum Enable
   End If
End Sub


Sub DialogFillUpksPmUpksNum_OnClick

End Sub


Sub DialogFillUpksPmZuDeviation_OnClick

End Sub


Sub GetDialogElementsUpks
   ' Debug = ReadControlValue(CheckBoxDebug)

   table_zu = DialogFillUpksmTableZU_sTableName
   field_zu_kad_num.Name = TableColumns_1(ReadControlValue(DialogFillUpksPmZuNumKvartal))
   field_zu_kad_num.Num = ReadControlValue(DialogFillUpksPmZuNumKvartal)
   field_zu_kod_upks.Name = TableColumns_1(ReadControlValue(DialogFillUpksPmZuKodUpks))
   field_zu_kod_upks.Num = ReadControlValue(DialogFillUpksPmZuKodUpks)
   filed_zu_deviation.Name = TableColumns_1(ReadControlValue(DialogFillUpksPmZuDeviation))
   filed_zu_deviation.Num = ReadControlValue(DialogFillUpksPmZuDeviation)


   table_upks = DialogFillUpksTableUpks_sTableName
   field_upks_kad_num.Name = TableColumns_2(ReadControlValue(DialogFillUpksPmUpksNum))
   field_upks_kad_num.Num = ReadControlValue(DialogFillUpksPmUpksNum)


   if Debug Then
      Print "table_zu: " + table_zu
      Print "field_zu_kad_num: " + field_zu_kad_num
      Print "field_zu_kod_upks: " + field_zu_kod_upks
      Print "filed_zu_deviation: " + filed_zu_deviation

      Print "table_upks: " + table_upks
      Print "field_upks_kad_num: " + field_upks_kad_num
   End if
End Sub


Sub SetDialogElementsUpks
   Dim iTable, ColNum as integer

   Alter Control DialogFillUpksPmZuNumKvartal Disable
   Alter Control DialogFillUpksPmZuKodUpks Disable
   Alter Control DialogFillUpksPmZuDeviation Disable

   Alter Control DialogFillUpksPmUpksNum Disable

   ' Alter Control CheckBoxDebug Value Debug
   ' ALter Control EditTextTolerance Value str$(Tolerance)
   ' Alter Control Dialog1CBoxEraseKadastr Value EraseByKadastr

   ' ' if TablePhotogrametry.Num > 0 then
   '    for iTable = 1 to myTablesComboBox2_LayerCount
   '       if myTablesComboBox2_saLayers(iTable) = TablePhotogrametry.Name then
   '          Alter Control myTablesComboBox2 Value iTable
   '       end if
   '    Next
   ' ' end If

   ' ' if TableOrthophoto.Num > 0 then
   '    for iTable = 1 to myTablesComboBox1_LayerCount
   '       if myTablesComboBox1_saLayers(iTable) = TableOrthophoto.Name then
   '          Alter Control myTablesComboBox1 Value iTable
   '          Call myTablesComboBox1_OnClick

   '          Alter Control PopupMenu1 Value ColNumber(KadNumberCol.Num, KadNumberCol.Name, TableColumns_1)

   '          Alter Control PopupMenu2 Value ColNumber(InfringementCol.Num, InfringementCol.Name, TableColumns_1)

   '       end if
   '    next
   ' ' end If

   ' ' if TableKadastr.Num > 0 then
   '    for iTable = 1 to myTablesBox_Kadastr_LayerCount
   '       if myTablesBox_Kadastr_saLayers(iTable) = TableKadastr.Name then
   '          ALter Control myTablesBox_Kadastr Value iTable
   '          call myTablesBox_Kadastr_OnClick

   '          Alter Control PopupMenu_Kadastr_KadNum Value ColNumber(KadNumberColInKadastr.Num, KadNumberColInKadastr.Name, TableColumns_2)

   '       end if
   '    next
   ' ' end if
End Sub


Sub LoadIniUpks
   Dim PachApplicationMBX, FullINIFileName As String
   Dim FormName, KeyString, ValueString As String
   Dim GetIniKey As String

   PachApplicationMBX = ApplicationDirectory$()
   FullINIFileName = PachApplicationMBX + Left$(ApplicationName$(), Len(ApplicationName$()) - 4) + ".ini"

   ' GetIniKey = IniReadString(FullINIFileName,"Параметры","Debug","T")
   ' if GetIniKey <> "" Then
   '     If GetIniKey = "T" Then
   '        Debug = true
   '     Else
   '        Debug = false
   '     End If
   ' End If

   ' GetIniKey = IniReadString(FullINIFileName,"TablePhotogrametry","Num","0")
   ' if GetIniKey <> "" Then
   '    TablePhotogrametry.Num = Val(GetIniKey)
   ' End If
   ' GetIniKey = IniReadString(FullINIFileName,"TablePhotogrametry","Name","")
   ' if GetIniKey <> "" Then
   '    TablePhotogrametry.Name = GetIniKey
   ' End If

   ' GetIniKey = IniReadString(FullINIFileName,"TableOrthophoto","Num","0")
   ' if GetIniKey <> "" Then
   '    TableOrthophoto.Num = Val(GetIniKey)
   ' End If
   ' GetIniKey = IniReadString(FullINIFileName,"TableOrthophoto","Name","")
   ' if GetIniKey <> "" Then
   '    TableOrthophoto.Name = GetIniKey
   ' End If

   ' GetIniKey = IniReadString(FullINIFileName,"TableKadastr","Num","0")
   ' if GetIniKey <> "" Then
   '    TableKadastr.Num = Val(GetIniKey)
   ' End If
   ' GetIniKey = IniReadString(FullINIFileName,"TableKadastr","Name","")
   ' if GetIniKey <> "" Then
   '    TableKadastr.Name = GetIniKey
   ' end if

   ' GetIniKey = IniReadString(FullINIFileName,"KadNumberCol","Num","0")
   ' if GetIniKey <> "" Then
   '    KadNumberCol.Num = Val(GetIniKey)
   ' End If
   ' GetIniKey = IniReadString(FullINIFileName,"KadNumberCol","Name","")
   ' if GetIniKey <> "" Then
   '    KadNumberCol.Name = GetIniKey
   ' end if

   ' GetIniKey = IniReadString(FullINIFileName,"InfringementCol","Num","0")
   ' if GetIniKey <> "" Then
   '    InfringementCol.Num = Val(GetIniKey)
   ' End If
   ' GetIniKey = IniReadString(FullINIFileName,"InfringementCol","Name","")
   ' if GetIniKey <> "" Then
   '    InfringementCol.Name = GetIniKey
   ' End If

   ' GetIniKey = IniReadString(FullINIFileName,"KadNumberColInKadastr","Num","0")
   ' if GetIniKey <> "" Then
   '    KadNumberColInKadastr.Num = Val(GetIniKey)
   ' End If
   ' GetIniKey = IniReadString(FullINIFileName,"KadNumberColInKadastr","Name","")
   ' if GetIniKey <> "" Then
   '    KadNumberColInKadastr.Name = GetIniKey
   ' End If

   ' GetIniKey = IniReadString(FullINIFileName,"Параметры","Tolerance","0")
   ' if GetIniKey <> "" Then
   '    Tolerance = Val(GetIniKey)
   ' End If

   ' GetIniKey = IniReadString(FullINIFileName,"Параметры","EraseByKadastr","F")
   ' if GetIniKey <> "" Then
   '     If GetIniKey = "T" Then
   '       EraseByKadastr = true
   '     Else
   '       EraseByKadastr = false
   '     End If
   ' End If

End Sub


Sub SaveIniUpks
    Dim PachApplicationMBX, FullINIFileName As String
    Dim FormName, KeyString, ValueString As String
    Dim SetIniKey As String

    PachApplicationMBX = ApplicationDirectory$()
    FullINIFileName = PachApplicationMBX + Left$(ApplicationName$(), Len(ApplicationName$()) - 4) + ".ini"

   ' SetIniKey = IniWriteString(FullINIFileName,"Параметры","Debug",str$(Debug))

   ' SetIniKey = IniWriteString(FullINIFileName,"TablePhotogrametry", "Num",str$(TablePhotogrametry.Num))
   ' SetIniKey = IniWriteString(FullINIFileName,"TablePhotogrametry", "Name",str$(TablePhotogrametry.Name))

   ' SetIniKey = IniWriteString(FullINIFileName,"TableOrthophoto", "Num",str$(TableOrthophoto.Num))
   ' SetIniKey = IniWriteString(FullINIFileName,"TableOrthophoto", "Name",str$(TableOrthophoto.Name))

   ' SetIniKey = IniWriteString(FullINIFileName,"TableKadastr", "Num",str$(TableKadastr.Num))
   ' SetIniKey = IniWriteString(FullINIFileName,"TableKadastr", "Name",str$(TableKadastr.Name))

   ' SetIniKey = IniWriteString(FullINIFileName,"KadNumberCol", "Num",str$(KadNumberCol.Num))
   ' SetIniKey = IniWriteString(FullINIFileName,"KadNumberCol", "Name",str$(KadNumberCol.Name))

   ' SetIniKey = IniWriteString(FullINIFileName,"InfringementCol", "Num",str$(InfringementCol.Num))
   ' SetIniKey = IniWriteString(FullINIFileName,"InfringementCol", "Name",str$(InfringementCol.Name))

   ' SetIniKey = IniWriteString(FullINIFileName,"KadNumberColInKadastr", "Num",str$(KadNumberColInKadastr.Num))
   ' SetIniKey = IniWriteString(FullINIFileName,"KadNumberColInKadastr", "Name",str$(KadNumberColInKadastr.Name))

   ' SetIniKey = IniWriteString(FullINIFileName,"Параметры", "Tolerance",str$(Tolerance))

   ' SetIniKey = IniWriteString(FullINIFileName,"Параметры","EraseByKadastr",str$(EraseByKadastr))
End Sub


Sub SelectTableUpks(byval TableName as string, TableColumns(), TypeColumns(), FullColumnsInfo() As String)
     Dim i_counter, j_counter, MaxLen, i_MaxLen, i  As Integer
     Dim SpaceString As String
         ReDim FullColumnsInfo(0)
         ReDim TableColumns(0)
         ReDim TypeColumns(0)
         For i_counter = 1 to NumCols(TableName)
             ReDim TableColumns(UBound(TableColumns)+1)
             ReDim TypeColumns(UBound(TypeColumns)+1)
             TableColumns(i_counter) = ColumnInfo(TableName,"COL"+i_counter,COL_INFO_NAME)
             Do Case  ColumnInfo(TableName,"COL"+i_counter,COL_INFO_TYPE)
                      Case COL_TYPE_CHAR
                           TypeColumns(i_counter) = "Символьный"
                      Case COL_TYPE_DECIMAL
                           TypeColumns(i_counter) = "Десятичный"
                      Case COL_TYPE_FLOAT
                           TypeColumns(i_counter) = "Вещественный"
                      Case COL_TYPE_INTEGER
                           TypeColumns(i_counter) = "Целочисленный (4 байт)"
                      Case COL_TYPE_SMALLINT
                           TypeColumns(i_counter) = "Короткое целое число (2 байт)"
                      Case COL_TYPE_DATE
                           TypeColumns(i_counter) = "Дата"
                      Case COL_TYPE_LOGICAL
                           TypeColumns(i_counter) = "Логический"
                      Case COL_TYPE_GRAPHIC
                           TypeColumns(i_counter) = "Специальный тип колонки (Obj)"
                      Case Else
                           Note "Ошибка чтения таблицы " + TableName
                           Exit Sub
             End Case
         Next
         For i_counter = 1 to NumCols(TableName) - 1
             i_MaxLen = Maximum(Len(TableColumns(i_counter)),Len(TableColumns(i_counter + 1)))
             MaxLen = Maximum(MaxLen,i_MaxLen)
         Next
         For i_counter = 1 to NumCols(TableName)
             ReDim FullColumnsInfo(UBound(FullColumnsInfo)+1)
             SpaceString = ""
             For j_counter = 1 to Fix((MaxLen - Len(TableColumns(i_counter)))*1.8)
                 SpaceString = SpaceString + " "
             Next
             FullColumnsInfo(i_counter) = TableColumns(i_counter) + SpaceString + "  : " + TypeColumns(i_counter)
         Next
End Sub


function getColNumberUpks(byval table as string, byval colName as string) as integer
dim iCol as integer

   for iCol = 1 to TableInfo(table, TAB_INFO_NCOLS)
      if UCase$(colName) = UCase$(ColumnInfo(table, "COL"+iCol, COL_INFO_NAME)) then
         getColNumberUpks = iCol
         Exit function
      end if
   next

end function