Include "MapBasic.def"
Include "Dialog1.def"

Include "..\..\MapBasic\ActualLabs.MapBasic.SharedDefenition2\UniversalValuesAndType.def"
Include "..\..\MapBasic\ActualLabs.MapBasic.SharedDefenition2\UniversalSubAndFunction.def"


'Не редактируйте нижеследующие закомментированные строки!
'//{$DLG_HANDLERS Dialog1.mb}

'//{$BEGIN GLOBALS FOR CONTROL myTablesComboBox2}
Global myTablesComboBox2_sTableName As String
Global myTablesComboBox2_sTablePath As String
Global myTablesComboBox2_saLayers() As String
Global myTablesComboBox2_WinID As Integer
Global myTablesComboBox2_CurrTable As String
Global myTablesComboBox2_LayerCount As Integer
Global myTablesComboBox2_I As Integer
'//{$END GLOBALS FOR CONTROL myTablesComboBox2}

'//{$BEGIN GLOBALS FOR CONTROL myTablesComboBox1}
Global myTablesComboBox1_sTableName As String
Global myTablesComboBox1_sTablePath As String
Global myTablesComboBox1_saLayers() As String
Global myTablesComboBox1_WinID As Integer
Global myTablesComboBox1_CurrTable As String
Global myTablesComboBox1_LayerCount As Integer
Global myTablesComboBox1_I As Integer
'//{$END GLOBALS FOR CONTROL myTablesComboBox1}

Global Debug As logical

Declare Function IniReadString Lib "alDLIB05.DLL" Alias "IniReadString" (ByVal File as String, ByVal Section as String, ByVal Key as String, ByVal DefV as String) As String
Declare Function IniWriteString Lib "alDLIB05.DLL" Alias "IniWriteString" (ByVal File as String, ByVal Section as String, ByVal Key as String, ByVal Value as String) As Integer

Declare Sub LoadIni
Declare Sub SaveIni
Declare Sub GetDialogElements
Declare Sub SetDialogElements

Declare function SelectProjection(byval Metod as string, byval TableName as string, byval WinowsNumber as integer) As string
Declare Sub GetAndSetCoordSys(byval TableName as string, byval setType as string)

Declare Sub SelectTable(byval TableName as string, TableColumns(), TypeColumns(), FullColumnsInfo() As String)

Dim realyCoordSys As string

Dim TableColumns_1(0), TypeColumns_1(0), FullColumnsInfo_1(0) As String

' Диалоговые элементы
Type ListInfo
   Name as string
   Num as integer
End Type

Dim KadNumberCol as ListInfo
Dim InfringementCol as ListInfo
Dim TablePhotogrametry as ListInfo
Dim TableOrthophoto as ListInfo
Dim Tolerance as float
'/ Диалоговые элементы

Sub Dialog1_OnShow
    Alter Control PopupMenu1 Disable
    Alter Control PopupMenu2 Disable
'//{$BEGIN INIT CODE FOR CONTROL myTablesComboBox2}
   ReDim myTablesComboBox2_saLayers(0)
   myTablesComboBox2_WinID = FrontWindow()
   If myTablesComboBox2_WinID Then
      myTablesComboBox2_LayerCount = NumTables()
   Else
      myTablesComboBox2_LayerCount = 0
      Alter Control myTablesComboBox2 Title "-Нет открытых таблиц-" Disable
   End If
   If (NumTables() > 0)AND( myTablesComboBox2_LayerCount <> 0) Then
      ReDim myTablesComboBox2_saLayers(myTablesComboBox2_LayerCount)
      For myTablesComboBox2_i = 1 to myTablesComboBox2_LayerCount
         myTablesComboBox2_saLayers(myTablesComboBox2_i) = TableInfo(myTablesComboBox2_i, TAB_INFO_NAME)
      Next
      Alter Control myTablesComboBox2 Title From Variable myTablesComboBox2_saLayers
   End If
'//{$END INIT CODE FOR CONTROL myTablesComboBox2}

'//{$BEGIN INIT CODE FOR CONTROL myTablesComboBox1}
   ReDim myTablesComboBox1_saLayers(0)
   myTablesComboBox1_WinID = FrontWindow()
   If myTablesComboBox1_WinID Then
      myTablesComboBox1_LayerCount = NumTables()
   Else
      myTablesComboBox1_LayerCount = 0
      Alter Control myTablesComboBox1 Title "-Нет открытых таблиц-" Disable
   End If
   If (NumTables() > 0)AND( myTablesComboBox1_LayerCount <> 0) Then
      ReDim myTablesComboBox1_saLayers(myTablesComboBox1_LayerCount)
      For myTablesComboBox1_i = 1 to myTablesComboBox1_LayerCount
         myTablesComboBox1_saLayers(myTablesComboBox1_i) = TableInfo(myTablesComboBox1_i, TAB_INFO_NAME)
      Next
      Alter Control myTablesComboBox1 Title From Variable myTablesComboBox1_saLayers
   End If
'//{$END INIT CODE FOR CONTROL myTablesComboBox1}

    Call myTablesComboBox1_OnClick
    Call myTablesComboBox1_OnClick

    Call LoadIni
    Call SetDialogElements

    If Debug Then Print "-------------------------------" End If

End Sub


Sub Dialog1_OnOKModalResult

End Sub


Sub Dialog1_OnCancelModalResult

End Sub


Sub Dialog1btnOK_OnClick
    Call GetDialogElements
    Call SaveIni
End Sub


Sub Dialog1btnCancel_OnClick

End Sub


Sub GetDialogElements
   Debug = ReadControlValue(CheckBoxDebug)
   TablePhotogrametry.Num = ReadControlValue(myTablesComboBox2)
   TablePhotogrametry.Name = myTablesComboBox2_saLayers(TablePhotogrametry.Num)
   TableOrthophoto.Num = ReadControlValue(myTablesComboBox1)
   TableOrthophoto.Name = myTablesComboBox1_saLayers(TableOrthophoto.Num)
   KadNumberCol.Num = ReadControlValue(PopupMenu1)
   KadNumberCol.Name = TableColumns_1(KadNumberCol.Num)
   InfringementCol.Num = ReadControlValue(PopupMenu2)
   InfringementCol.Name = TableColumns_1(InfringementCol.Num)
   Tolerance = val(ReadControlValue(EditTextTolerance))

   if Debug Then
      Print "TablePhotogrametry.Num: " + str$(TablePhotogrametry.Num)
      Print "TablePhotogrametry.Name: " + TablePhotogrametry.Name
      Print "TableOrthophoto.Num: " + str$(TableOrthophoto.Num)
      Print "TableOrthophoto.Num: " + TableOrthophoto.Num
      Print "KadNumberCol.Num: " + str$(KadNumberCol.Num)
      Print "KadNumberCol.Name: " + KadNumberCol.Name
      Print "InfringementCol.Num: " + str$(InfringementCol.Num)
      Print "InfringementCol.Name: " + InfringementCol.Name
      Print "Tolerance: " + str$(Tolerance)
   End if
End Sub


Sub SetDialogElements
	Dim iTable, iCol as integer
   Alter Control CheckBoxDebug Value Debug
   ALter Control EditTextTolerance Value str$(Tolerance)

   if TablePhotogrametry.Num > 0 then
      for iTable = 1 to myTablesComboBox2_LayerCount
         if myTablesComboBox2_saLayers(iTable) = TablePhotogrametry.Name then
            Alter Control myTablesComboBox2 Value iTable
         end if 
      Next
   end If

   if TableOrthophoto.Num > 0 then
      for iTable = 1 to myTablesComboBox1_LayerCount
         if myTablesComboBox1_saLayers(iTable) = TableOrthophoto.Name then
            Alter Control myTablesComboBox1 Value iTable
            Call myTablesComboBox1_OnClick

            ' TODO: Вынести в функцию поиск номера в списка но названию элемента
            if KadNumberCol.Num > 0 then
               for iCol = 1 to UBound(TableColumns_1)
                  if TableColumns_1(iCol) = KadNumberCol.Name then
                     Alter Control PopupMenu1 Value iCol
                  end if
               next
            end if 

            if InfringementCol.Num > 0 then
               for iCol = 1 to UBound(TableColumns_1)
                  if TableColumns_1(iCol) = InfringementCol.Name then
                     Alter Control PopupMenu2 Value iCol
                  end if
               next
            end if
         end if
      next
   end If
End Sub


Sub LoadIni
    Dim PachApplicationMBX, FullINIFileName As String
    Dim FormName, KeyString, ValueString As String
    Dim GetIniKey As String

    PachApplicationMBX = ApplicationDirectory$()
    FullINIFileName = PachApplicationMBX + Left$(ApplicationName$(), Len(ApplicationName$()) - 4) + ".ini"

End Sub


Sub SaveIni
    Dim PachApplicationMBX, FullINIFileName As String
    Dim FormName, KeyString, ValueString As String
    Dim SetIniKey As String

End Sub


Sub GetAndSetCoordSys(byval TableName as string, byval setType as string)
    If tableinfo(TableName, TAB_INFO_MAPPABLE) = false Then
       'Note "Таблица '" + TableName + "' не содержит графических объектов. Обработка остановлена."
       Exit Sub
    End If
    realyCoordSys = SelectProjection(setType, TableName, FrontWindow())
    'Note realyCoordSys
    If realyCoordSys <> "Ошибка" Then
       'Note "Результат: "  + realyCoordSys
       run command "Set CoordSys " + realyCoordSys
    Else
       'Note "ошибка определения системы координат..."
    end If
    'Print realyCoordSys
End Sub


function SelectProjection(byval Metod as string, byval TableName as string, byval WinowsNumber as integer) As string
   Dim realyTableName As string
   Do Case Metod
      Case "Объект"
           If tableinfo(TableName, TAB_INFO_TEMP) Then
              realyTableName = selectioninfo(SEL_INFO_TABLENAME)
           Else
               realyTableName = TableName
           End If
           realyCoordSys = WhatSystemOfCoordinates(realyTableName)
      Case "Окно"
           realyCoordSys = WhatSystemOfCoordinatesWindow(WinowsNumber)
      Case "Выбор"

      Case Else

   End Case
   SelectProjection = realyCoordSys
End Function


Sub myTablesComboBox1_OnClick
   If UBound(myTablesComboBox1_saLayers) > 0 Then
      myTablesComboBox1_sTableName = myTablesComboBox1_saLayers(ReadControlValue(myTablesComboBox1))
      'print "myTablesComboBox1_sTableName ="+myTablesComboBox1_sTableName
      Call SelectTable(myTablesComboBox1_sTableName, TableColumns_1, TypeColumns_1, FullColumnsInfo_1)
      Alter Control PopupMenu1 Title From Variable FullColumnsInfo_1
      Alter Control PopupMenu1 Enable
      Alter Control PopupMenu2 Title From Variable FullColumnsInfo_1
      Alter Control PopupMenu2 Enable
      ' TODO: Попробовать установить предыдущие поля
   End If
End Sub


Sub myTablesComboBox2_OnClick
   If UBound(myTablesComboBox2_saLayers) > 0 Then
      myTablesComboBox2_sTableName = myTablesComboBox2_saLayers(ReadControlValue(myTablesComboBox2))
      'print "myTablesComboBox2_sTableName ="+myTablesComboBox2_sTableName
   End If
End Sub


Sub PopupMenu1_OnClick

End Sub


Sub PopupMenu2_OnClick

End Sub


Sub CheckBoxDebug_OnClick

End Sub


Sub SelectTable(byval TableName as string, TableColumns(), TypeColumns(), FullColumnsInfo() As String)
     Dim i_counter, j_counter, MaxLen, i_MaxLen, i  As Integer
     Dim SpaceString As String
         ReDim FullColumnsInfo(0)
         ReDim TableColumns(0)
         ReDim TypeColumns(0)
         For i_counter = 1 to NumCols(TableName)
             ReDim TableColumns(UBound(TableColumns)+1)
             ReDim TypeColumns(UBound(TypeColumns)+1)
             TableColumns(i_counter) = ColumnInfo(TableName,"COL"+i_counter,COL_INFO_NAME)
             Do Case  ColumnInfo(TableName,"COL"+i_counter,COL_INFO_TYPE)
                      Case COL_TYPE_CHAR
                           TypeColumns(i_counter) = "Символьный"
                      Case COL_TYPE_DECIMAL
                           TypeColumns(i_counter) = "Десятичный"
                      Case COL_TYPE_FLOAT
                           TypeColumns(i_counter) = "Вещественный"
                      Case COL_TYPE_INTEGER
                           TypeColumns(i_counter) = "Целочисленный (4 байт)"
                      Case COL_TYPE_SMALLINT
                           TypeColumns(i_counter) = "Короткое целое число (2 байт)"
                      Case COL_TYPE_DATE
                           TypeColumns(i_counter) = "Дата"
                      Case COL_TYPE_LOGICAL
                           TypeColumns(i_counter) = "Логический"
                      Case COL_TYPE_GRAPHIC
                           TypeColumns(i_counter) = "Специальный тип колонки (Obj)"
                      Case Else
                           Note "Ошибка чтения таблицы " + TableName
                           Exit Sub
             End Case
         Next
         For i_counter = 1 to NumCols(TableName) - 1
             i_MaxLen = Maximum(Len(TableColumns(i_counter)),Len(TableColumns(i_counter + 1)))
             MaxLen = Maximum(MaxLen,i_MaxLen)
         Next
         For i_counter = 1 to NumCols(TableName)
             ReDim FullColumnsInfo(UBound(FullColumnsInfo)+1)
             SpaceString = ""
             For j_counter = 1 to Fix((MaxLen - Len(TableColumns(i_counter)))*1.8)
                 SpaceString = SpaceString + " "
             Next
             FullColumnsInfo(i_counter) = TableColumns(i_counter) + SpaceString + "  : " + TypeColumns(i_counter)
         Next
End Sub