' #MODELE#

declare Sub SelectTable#MODELE#(byval TableName as string, TableColumns(), TypeColumns(), FullColumnsInfo() As String)
declare function getColNumber#MODELE#(byval table as string, byval colName as string) as integer
declare function getColType#MODELE#(byval table as string, byval col as integer, colname as string, coltype as string) as logical
declare Function TableIsOpen#MODELE#(byval Name as string) as logical
declare function isEqualTableStructure#MODELE#(byval tableBase, tableCheking as string, isEqualCol() as logical) as logical
declare Function ColNumber#MODELE#(byval Num as integer, byval Name as string, ColList() as string) as integer

Sub SelectTable#MODELE#(byval TableName as string, TableColumns(), TypeColumns(), FullColumnsInfo() As String)
     Dim i_counter, j_counter, MaxLen, i_MaxLen, i  As Integer
     Dim SpaceString As String
         ReDim FullColumnsInfo(0)
         ReDim TableColumns(0)
         ReDim TypeColumns(0)
         For i_counter = 1 to NumCols(TableName)
             ReDim TableColumns(UBound(TableColumns)+1)
             ReDim TypeColumns(UBound(TypeColumns)+1)
             TableColumns(i_counter) = ColumnInfo(TableName,"COL"+i_counter,COL_INFO_NAME)
             Do Case  ColumnInfo(TableName,"COL"+i_counter,COL_INFO_TYPE)
                      Case COL_TYPE_CHAR
                           TypeColumns(i_counter) = "Символьный"
                      Case COL_TYPE_DECIMAL
                           TypeColumns(i_counter) = "Десятичный"
                      Case COL_TYPE_FLOAT
                           TypeColumns(i_counter) = "Вещественный"
                      Case COL_TYPE_INTEGER
                           TypeColumns(i_counter) = "Целочисленный (4 байт)"
                      Case COL_TYPE_SMALLINT
                           TypeColumns(i_counter) = "Короткое целое число (2 байт)"
                      Case COL_TYPE_DATE
                           TypeColumns(i_counter) = "Дата"
                      Case COL_TYPE_LOGICAL
                           TypeColumns(i_counter) = "Логический"
                      Case COL_TYPE_GRAPHIC
                           TypeColumns(i_counter) = "Специальный тип колонки (Obj)"
                      Case Else
                           Note "Ошибка чтения таблицы " + TableName
                           Exit Sub
             End Case
         Next
         For i_counter = 1 to NumCols(TableName) - 1
             i_MaxLen = Maximum(Len(TableColumns(i_counter)),Len(TableColumns(i_counter + 1)))
             MaxLen = Maximum(MaxLen,i_MaxLen)
         Next
         For i_counter = 1 to NumCols(TableName)
             ReDim FullColumnsInfo(UBound(FullColumnsInfo)+1)
             SpaceString = ""
             For j_counter = 1 to Fix((MaxLen - Len(TableColumns(i_counter)))*1.8)
                 SpaceString = SpaceString + " "
             Next
             FullColumnsInfo(i_counter) = TableColumns(i_counter) + SpaceString + "  : " + TypeColumns(i_counter)
         Next
End Sub


function getColNumber#MODELE#(byval table as string, byval colName as string) as integer
dim iCol as integer

   for iCol = 1 to TableInfo(table, TAB_INFO_NCOLS)
      if UCase$(colName) = UCase$(ColumnInfo(table, "COL"+iCol, COL_INFO_NAME)) then
         getColNumber#MODELE# = iCol
         Exit function
      end if
   next

end function


function getColType#MODELE#(byval table as string, byval col as integer, colname as string, coltype as string) as logical
   getColType#MODELE# = false

   colname = ColumnInfo(table, "COL"+col, COL_INFO_NAME)

   do case ColumnInfo(table, "COL"+col, COL_INFO_TYPE)
      case COL_TYPE_CHAR
         coltype = "Char(" + ColumnInfo(table, "COL"+col, COL_INFO_WIDTH) + ")"
      case COL_TYPE_DECIMAL
         coltype = "Decimal(" + ColumnInfo(table, "COL"+col, COL_INFO_WIDTH) + "," + ColumnInfo(table, "COL"+col, COL_INFO_DECPLACES) + ")"
      case COL_TYPE_INTEGER
         coltype = "Integer"
      case COL_TYPE_SMALLINT
         coltype = "SmallInt"
      case COL_TYPE_DATE
         coltype = "Date"
      case COL_TYPE_LOGICAL
         coltype = "Logical"
      case COL_TYPE_GRAPHIC
         coltype = "obj"
      case COL_TYPE_FLOAT
         coltype = "Float"
      case COL_TYPE_TIME
         coltype = "Time"
      case COL_TYPE_DATETIME
         coltype = "DateTime"
   end case

   getColType#MODELE# = true
end function


Function TableIsOpen#MODELE#(byval Name as string) as logical
Dim i as integer

   for i = 1 to NumTables()
      if Debug then Print "Name: " + Name + ", TAB_INFO_NAME: " + TableInfo(i, TAB_INFO_NAME)        End If
      if TableInfo(i, TAB_INFO_NAME) = Name then
            TableIsOpen#MODELE# = true
            Exit Function
      End If
   Next
   TableIsOpen#MODELE# = false

   if Debug then Print "Таблица " + Name + " не открыта."        End If
End Function


function isEqualTableStructure#MODELE#(byval tableBase, tableCheking as string, isEqualCol() as logical) as logical
Dim iColChekingTable, iColBaseTable as integer

   redim isEqualCol(TableInfo(tableBase, TAB_INFO_NCOLS))

   for iColBaseTable = 1 to TableInfo(tableBase, TAB_INFO_NCOLS)
      isEqualCol(iColBaseTable) = false

      if Debug then
         Print "Проверяется таблица " + tableBase + " с базовой таблицей " + tableCheking
      End If

      for iColChekingTable = 1 to TableInfo(tableCheking, TAB_INFO_NCOLS)
         if Debug then
               Print "......поля " + ColumnInfo(tableBase, "COL"+iColBaseTable, COL_INFO_NAME) + " и " + ColumnInfo(tableCheking, "COL"+iColChekingTable, COL_INFO_NAME)
         End If

         if UCase$(ColumnInfo(tableBase, "COL"+iColBaseTable, COL_INFO_NAME)) = UCase$(ColumnInfo(tableCheking, "COL"+iColChekingTable, COL_INFO_NAME)) then
               isEqualCol(iColBaseTable) = true
               exit for
         end if
      Next
   next

   isEqualTableStructure#MODELE# = true
   for iColBaseTable = 1 to UBound(isEqualCol)
      if isEqualCol(iColBaseTable) = false then
         isEqualTableStructure#MODELE# = false
         'exit function
         if Debug then Print "Поля " + ColumnInfo(tableBase, "COL"+iColBaseTable, COL_INFO_NAME) + " в таблице " + tableBase + " нет." end if
      End If
   Next
end function


Function ColNumber#MODELE#(byval Num as integer, byval Name as string, ColList() as string) as integer
dim iCol as integer
   ' note "Num: " + str$(Num) + ", Name: " + Name + ", ColList: " + str$(UBound(ColList))
   if Num > 0 then
      for iCol = 1 to UBound(ColList)
         if ColList(iCol) = Name then
            ColNumber#MODELE# = iCol
            Exit Function
         end if
      next
   Else
      ColNumber#MODELE# = 0
   end if
end function